%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.86.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.6.0.1072779 \\(R2019a\\). Operating System: Linux)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 306 290
%%HiResBoundingBox: 0 0 306 290
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font ALQWJN+Helvetica
%!FontType1-1.0: ALQWJN+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /ALQWJN+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -23 679 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 65 /A put
dup 67 /C put
dup 69 /E put
dup 82 /R put
dup 84 /T put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB96681CFF80FBC1971D5909A668262B0DF18FBA6DAA4D8CB27A01E626
6FE868DD0D68B24C25D9A4B91732AA65B12254C4FF636DA73FCC06A16C6F557A
3150519FFF1B463B8D13D32148C1000EA9521BFADFA61781C9DEC21131FEEDE5
9C83CD7427B6FDD6B06467E6A3A1A0189416BCEBE1478843B1A79AE04560F103
332B163354619990D54A3163412D29E25B971186BB0F9C8F3FB985B57FB2BDFF
49518489E7769EC3C78AEA11508F0E0014C5B6EA6622A04535F2360D6EB5FFC6
1EA93A18D9B06F8BE03AB5C2EDFA08ABEDB536A166FEDB273D321E6E84AB33AA
391AD15915F553AA59AE380D7BEE9E029CE849077487C8FEA3802EFA07FA86A1
BB205E4760BCEAD710BFA76C86AE11D564E2EEEB98E336FFE27ADA4870A4D526
C11307005F0E4526EBB7DB21E92A3E5649C855094C5BE792AC75794CB6447D25
112A5D23C167B1E857380B77B6EDC15B74D7C8B95A01AFFEF831A8F68D7CAC08
02DE36505F8265ED67561E95E1ED409E4ECFD56389A98233335012002A586F53
0966689E7E2F8093D7B19BF16C3308C8419F1A74D8D3E04664D10E157DF2AADF
71E8A6F47AD384B721D6555E3035669C260966F75A6434AA8A3F70F2D93CDF9C
935A144D0D25C8381F28399FF99495E1A64292FC2150BA4FD0D88BD9C3477C27
7C2844EB7ECC702BF3C2432E44487B5DDE8A64DB8DE278EE68BADD7B980A4842
A3A36D8CFCB557B8284A6994532E5B931F9950548AAFA11D738CEE284E899A6F
FA1957AFE5C1ED1460E22EAADC9070C906817C3D3368F47F0B5015B32A11EABD
2F8507D2D97712248CEA09240B627777BB3EB9373FECA74C00AB2FF4A6246DB3
BB3A61EFC4F54E7011FE8D9035AEDC65D5BDF92A73BAD2FEAB9A4F9E85C88148
3E7FC5076F4E7A2D9E3EE7BAC9C17D0328839CCD78468D56E35F4C5EBC69E404
75D3B55AC1FB04080C6A705CA8931CB80EE160371309732F55DC6B5620104C4F
08C735EBB4FA1EA45EA05D01A4219F1AE73622FD4116421967A8DD2DF9B588B1
1DE4D589A72C34A790F4C4E6069B2413BC500D763673CC3E42B6BA752B189045
4E291B0182BA0F8DC4D9627E6056718AAF32585FFED12B28C4CE32757F4633CC
5DFDDEB49BBFBFDEC042CCE32031B5A2892F44737585F2398A8217588D13D2E6
3C19CB949BEC9267DE7D0B28526A509D50A9B59612F5315738CC416A0C77394F
5471A19AFD70BA01F570AC7045F33A4763EB8C3F4AE5BFF321DF6FDCA331D2D2
E2835DA9906210456F5A25D4CF441BF8C6B8E27E0C9A36A6089021F385FCC9DA
7E1DFA905C1308D7821B527720D075101FDF797F20D12440C5B73BA753808A11
7D27D367704E47C5D7262DCF5473600651FF1F52D82E51498F13E69BC291F3C9
0D8B37149949286CB7452D9F43EA91BF62E1DF258EC6E96303167A977DEC92E5
967E703FE7B3881E0B41831B7387DDE6B8B841B9B4585B4D3946CF9D45D8A403
06B573EE20183ECCAB077673CF38147203CB8AA01374DCEF2F47DA7CB4E2195D
0F633CD72AA8A8AEDD133B5B9315D51E941E1FA492CED952710C3275DAE3A03C
4E3124148D9095FFCE721534FE26E34449C168431BE25EDFA4D0C38D02987CB3
422F4018A15748742C6E7F06250B01E152AB290A127A2EB6CBF0C05C4B3F2B40
329B9D927FBECC8099AF84FF4CFB905F6032C5255D8526C6BAF09AD4C89118B1
5B1C8D1665E14D2CFEFC30C5011CC3CDBA45BB102BE5EB3F14C26533358B60A5
1550413B8C3E6CDB80EF9D90D927690F1A5396F390408FBEB3E616BA20689338
9BDB2348A4903F54B61989597BFF045F44A2AEEF24C08BBC5C738C46C5A75045
9E827E7BD949EEF18802D6224C51A1D1E41B899FC67BD10B653415DBBF26F0FF
8E1C31EC96CCBF4D6E90786C79C66B9606BB9F72D5861514A14CED72B5072A7F
AA33FD1FC3E4AFA636E891046C6017E5D098C545B35DEE20F16C6E5F397853AE
F44E425362050E82EE8330BE55B86B2B7592F88FEA76048E32422340DB5FD0B5
B3BFC86618D4D142B2CF62F62F51EB12E7A1FE4D43B7B57BA095CA6C49F1713F
963189EFAEE81FC85EEECED8194AC7BDB3E130AC79D665C496AB47FCF4C08916
69F6E7F97C3683CE3FE4D3532E640D8F73CEEDF3F0671217C70F9CFCDEB5A751
5B7458F4F7E954FD72789EF327610F66BB25A005ADB2F0D756A77194615626B4
869AAB6F5A71317748C9EDADF3A8A31E6FBE4C9472B92CD778813556B030B420
42F14F5A7C61F54CBD543571A2004895BC738850A6C4DAAAEE5A3EFD71D76C9E
67BB268CDAA0FF8BF0DBBE400F0D36C116099A8577D97B7DA16D72620042ADAF
58AD021535EDDBC935B98705A7A3A906499EFAABB2158799A135A967DE3F9823
F28C569ADB0349A218E8FDD61259CA725FC32646DEC849609FB2515D2B2EA1ED
DA402D8A7857186FB2ADE6F5C545A24DCC1960586AC676BDA7607803AA5D5A9F
B8D149994AA3A26C810EDCA32C3CD619AC7FE20DD284E3DF58CCF6DADD08E6CC
087A01D53581A87151200A253F8356969BA29C10FEA7EAC0F63E97E2438354A1
EED41E0DD1E971D28C96B80501C11A53B26DA7CA10BBDA0FA54151EE96FAD7BE
EFBD3EE04697BE2303
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /ALQWJN+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 306 290 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
911.25 770 2107.5 2107.5 re
f
9.9975 w
1 j
/DeviceGray {} CS
[0.873] SC
1326.36 770 m
1326.36 2877.5 l
S
1965 770 m
1965 2877.5 l
S
2603.64 770 m
2603.64 2877.5 l
S
[7.5 22.5] 0 d
2 j
/DeviceGray {} CS
[0.7754] SC
3018.75 938.602 m
911.25 938.602 l
S
3018.75 1107.2 m
911.25 1107.2 l
S
3018.75 1275.8 m
911.25 1275.8 l
S
3018.75 1444.4 m
911.25 1444.4 l
S
3018.75 1781.6 m
911.25 1781.6 l
S
3018.75 1950.2 m
911.25 1950.2 l
S
3018.75 2118.8 m
911.25 2118.8 l
S
3018.75 2287.4 m
911.25 2287.4 l
S
3018.75 2624.6 m
911.25 2624.6 l
S
3018.75 2793.2 m
911.25 2793.2 l
S
[] 0 d
1 j
/DeviceGray {} CS
[0.873] SC
3018.75 770 m
911.25 770 l
S
3018.75 1613 m
911.25 1613 l
S
3018.75 2456 m
911.25 2456 l
S
2 J
/DeviceGray {} CS
[0.1489] SC
911.25 770 m
3018.75 770 l
S
1326.36 770 m
1326.36 791.074 l
S
1965 770 m
1965 791.074 l
S
2603.64 770 m
2603.64 791.074 l
S
1007.05 770 m
1007.05 780.539 l
S
1166.71 770 m
1166.71 780.539 l
S
1486.02 770 m
1486.02 780.539 l
S
1645.68 770 m
1645.68 780.539 l
S
1805.34 770 m
1805.34 780.539 l
S
2124.66 770 m
2124.66 780.539 l
S
2284.32 770 m
2284.32 780.539 l
S
2443.98 770 m
2443.98 780.539 l
S
2763.29 770 m
2763.29 780.539 l
S
2922.95 770 m
2922.95 780.539 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 122.886 40.5] Tm
0 0 Td
/F8_0 30 Tf
(2)
[16.68
0] Tj
-1572.79 TJm
(4)
[16.68
0] Tj
-1572.79 TJm
(6)
[16.68
0] Tj
-33.2613 -37 Td
(AR-Coefficient)
[20.01
0
21.66
0
9.99
0
21.66
0
16.68
0
16.68
0
8.34
0
8.34
0
6.66
0
15
0
6.66
0
16.68
0
16.68
0
8.34
0] Tj
Q
911.25 770 m
911.25 2877.5 l
S
911.25 770 m
932.324 770 l
S
911.25 1613 m
932.324 1613 l
S
911.25 2456 m
932.324 2456 l
S
911.25 938.602 m
921.789 938.602 l
S
911.25 1107.2 m
921.789 1107.2 l
S
911.25 1275.8 m
921.789 1275.8 l
S
911.25 1444.4 m
921.789 1444.4 l
S
911.25 1781.6 m
921.789 1781.6 l
S
911.25 1950.2 m
921.789 1950.2 l
S
911.25 2118.8 m
921.789 2118.8 l
S
911.25 2287.4 m
921.789 2287.4 l
S
911.25 2624.6 m
921.789 2624.6 l
S
911.25 2793.2 m
921.789 2793.2 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 63.625 66.5] Tm
0 0 Td
/F8_0 30 Tf
(0)
[16.68
0] Tj
-28.5 84.3 Td
(0.1)
[16.68
0
8.34
0
16.68
0] Tj
-28.5 168.6 Td
(0.2)
[16.68
0
8.34
0
16.68
0] Tj
[0 1 -1 0 24.625 153.125] Tm
0 0 Td
/F8_0 30 Tf
(TCE)
[18.33
0
21.66
0
20.01
0] Tj
Q
20.0025 w
0 J
/DeviceRGB {} CS
[1 0 0] SC
1007.05 1495.54 m
1007.05 1446.22 l
S
1326.36 1469.59 m
1326.36 1423.05 l
S
2284.32 1363.03 m
2284.32 1321.89 l
S
2922.95 1320.92 m
2922.95 1284.26 l
S
1007.05 1495.54 m
1007.05 1544.86 l
S
1326.36 1469.59 m
1326.36 1516.12 l
S
2284.32 1363.03 m
2284.32 1404.17 l
S
2922.95 1320.92 m
2922.95 1357.57 l
S
1007.05 1495.54 m
1326.36 1469.59 l
2284.32 1363.03 l
2922.95 1320.92 l
S
/DeviceRGB {} cs
[1 0 0] sc
977.047 1446.22 m
1037.05 1446.22 l
f
977.047 1446.22 m
1037.05 1446.22 l
S
1296.36 1423.05 m
1356.36 1423.05 l
f
1296.36 1423.05 m
1356.36 1423.05 l
S
2254.32 1321.9 m
2314.32 1321.9 l
f
2254.32 1321.9 m
2314.32 1321.9 l
S
2892.95 1284.26 m
2952.95 1284.26 l
f
2892.95 1284.26 m
2952.95 1284.26 l
S
977.047 1544.86 m
1037.05 1544.86 l
f
977.047 1544.86 m
1037.05 1544.86 l
S
1296.36 1516.13 m
1356.36 1516.13 l
f
1296.36 1516.13 m
1356.36 1516.13 l
S
2254.32 1404.17 m
2314.32 1404.17 l
f
2254.32 1404.17 m
2314.32 1404.17 l
S
2892.95 1357.57 m
2952.95 1357.57 l
f
2892.95 1357.57 m
2952.95 1357.57 l
S
/DeviceRGB {} CS
[0 0 1] SC
1007.05 2027.8 m
1007.05 1955.11 l
S
1326.36 1874.21 m
1326.36 1807.59 l
S
2284.32 1709.6 m
2284.32 1654.71 l
S
2922.95 1651.01 m
2922.95 1597.94 l
S
1007.05 2027.8 m
1007.05 2100.49 l
S
1326.36 1874.21 m
1326.36 1940.82 l
S
2284.32 1709.6 m
2284.32 1764.48 l
S
2922.95 1651.01 m
2922.95 1704.09 l
S
1007.05 2027.8 m
1326.36 1874.21 l
2284.32 1709.6 l
2922.95 1651.01 l
S
/DeviceRGB {} cs
[0 0 1] sc
977.047 1955.11 m
1037.05 1955.11 l
f
977.047 1955.11 m
1037.05 1955.11 l
S
1296.36 1807.59 m
1356.36 1807.59 l
f
1296.36 1807.59 m
1356.36 1807.59 l
S
2254.32 1654.71 m
2314.32 1654.71 l
f
2254.32 1654.71 m
2314.32 1654.71 l
S
2892.95 1597.94 m
2952.95 1597.94 l
f
2892.95 1597.94 m
2952.95 1597.94 l
S
977.047 2100.5 m
1037.05 2100.5 l
f
977.047 2100.5 m
1037.05 2100.5 l
S
1296.36 1940.82 m
1356.36 1940.82 l
f
1296.36 1940.82 m
1356.36 1940.82 l
S
2254.32 1764.48 m
2314.32 1764.48 l
f
2254.32 1764.48 m
2314.32 1764.48 l
S
2892.95 1704.09 m
2952.95 1704.09 l
f
2892.95 1704.09 m
2952.95 1704.09 l
S
/DeviceRGB {} CS
[0 1 0] SC
1007.05 1924.71 m
1007.05 1830.16 l
S
1326.36 1927.11 m
1326.36 1818.03 l
S
2284.32 1680.78 m
2284.32 1599.48 l
S
2922.95 1639.2 m
2922.95 1558.92 l
S
1007.05 1924.71 m
1007.05 2019.27 l
S
1326.36 1927.11 m
1326.36 2036.2 l
S
2284.32 1680.78 m
2284.32 1762.07 l
S
2922.95 1639.2 m
2922.95 1719.5 l
S
1007.05 1924.71 m
1326.36 1927.11 l
2284.32 1680.78 l
2922.95 1639.2 l
S
/DeviceRGB {} cs
[0 1 0] sc
977.047 1830.15 m
1037.05 1830.15 l
f
977.047 1830.15 m
1037.05 1830.15 l
S
1296.36 1818.03 m
1356.36 1818.03 l
f
1296.36 1818.03 m
1356.36 1818.03 l
S
2254.32 1599.49 m
2314.32 1599.49 l
f
2254.32 1599.49 m
2314.32 1599.49 l
S
2892.95 1558.91 m
2952.95 1558.91 l
f
2892.95 1558.91 m
2952.95 1558.91 l
S
977.047 2019.28 m
1037.05 2019.28 l
f
977.047 2019.28 m
1037.05 2019.28 l
S
1296.36 2036.19 m
1356.36 2036.19 l
f
1296.36 2036.19 m
1356.36 2036.19 l
S
2254.32 1762.07 m
2314.32 1762.07 l
f
2254.32 1762.07 m
2314.32 1762.07 l
S
2892.95 1719.5 m
2952.95 1719.5 l
f
2892.95 1719.5 m
2952.95 1719.5 l
S
/DeviceRGB {} CS
[1 0 1] SC
1007.05 1512.98 m
1007.05 1419.79 l
S
1326.36 1446.21 m
1326.36 1348.81 l
S
2284.32 1466.12 m
2284.32 1366.95 l
S
2922.95 1287.16 m
2922.95 1212.92 l
S
1007.05 1512.98 m
1007.05 1606.17 l
S
1326.36 1446.21 m
1326.36 1543.6 l
S
2284.32 1466.12 m
2284.32 1565.29 l
S
2922.95 1287.16 m
2922.95 1361.41 l
S
1007.05 1512.98 m
1326.36 1446.21 l
2284.32 1466.12 l
2922.95 1287.16 l
S
/DeviceRGB {} cs
[1 0 1] sc
977.047 1419.79 m
1037.05 1419.79 l
f
977.047 1419.79 m
1037.05 1419.79 l
S
1296.36 1348.81 m
1356.36 1348.81 l
f
1296.36 1348.81 m
1356.36 1348.81 l
S
2254.32 1366.95 m
2314.32 1366.95 l
f
2254.32 1366.95 m
2314.32 1366.95 l
S
2892.95 1212.92 m
2952.95 1212.92 l
f
2892.95 1212.92 m
2952.95 1212.92 l
S
977.047 1606.16 m
1037.05 1606.16 l
f
977.047 1606.16 m
1037.05 1606.16 l
S
1296.36 1543.6 m
1356.36 1543.6 l
f
1296.36 1543.6 m
1356.36 1543.6 l
S
2254.32 1565.3 m
2314.32 1565.3 l
f
2254.32 1565.3 m
2314.32 1565.3 l
S
2892.95 1361.41 m
2952.95 1361.41 l
f
2892.95 1361.41 m
2952.95 1361.41 l
S
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font ALQWJN+Helvetica
%%EOF
